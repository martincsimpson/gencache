Done:
    - Ruby API 
    - Cache configuration
    - Implementation of code blocks
        - Stale allowed
        - Smart Refresh
        - Data fetch
    - Cache Insert
    - Cache retrieval
    - Background refresh job
    ---
    - packaging as a gem
    - In-memory storage driver
    - Implement Singletons (not thread safe) for Storage Drivers
    - Working cache fetch/set using local_test.rb.
    - Add logging
    - Testing of background fetcher
    ---
    - namespace: "merchant" (dynamic)
    - Cassandra backing store with migrations
    --
    - Tests

Next Implementation Steps:
    - Flush cache (update generations with TTL that expires)
    - Update older generations on a SET to TTL
    - Remove logger expects
    - Write Readme (no migrations included, reason why, how you would adjust the table / recommend how we would do migrations)